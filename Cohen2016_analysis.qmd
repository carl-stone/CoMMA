---
title: "Cohen 2016 analysis"
format: html
---

## Load Data

These data were taken from Supplemental Table 1 in Cohen 2016 from Nature Genetics.

```{r load_packages}
library(tidyverse)
library(CarlsPhData)
```

```{r load_data}
cohen_df <- read_tsv(file = "/Users/carlstone/Library/CloudStorage/Box-Box/Behringer_Lab_Box_Drive/Projects/LongTermExpEvo/MethylationProject/Cohen2016/Cohen2016_data_updatedcoordinates.txt")
cohen_df <- cohen_df |> 
  drop_na()
cohen_df[is.na(cohen_df)] <- 0
cohen_cov <- read_tsv(file = "/Users/carlstone/Library/CloudStorage/Box-Box/Behringer_Lab_Box_Drive/Projects/LongTermExpEvo/MethylationProject/Cohen2016/Cohen_coverage_data.txt")
```

```{r combine_cohen_data}
cohen_combined <- full_join(cohen_df, cohen_cov,
                         by = c("Site", "Strand", "Motif"),
                         suffix = c("_beta", "_cov"))
cohen_combined_long <- cohen_combined |> 
  pivot_longer(cols = h0_t0_1_beta:h4_Amp_2_cov,
               names_to = c("time", "group", "rep", ".value"),
               names_pattern = "h(.)_(.*)_(.)_(.*)") |> 
  drop_na()

quantile(cohen_combined_long$cov)
quantile(cohen_combined_long$beta)
```


```{r annotate_WT}
cohen_annotated <- annotateMethylSites(methyl_df = cohen_combined,
                                             meta_df = genome_sites,
                                             location = 'Site')
cohen_annotated_long <-  cohen_annotated %>% 
  dplyr::select(!'Transcription-Units') %>% 
  pivot_longer(cols = Genes:'Origin-of-Replication',
               names_to = 'feature_type',
               values_to = 'feature_name') %>% 
  pivot_longer(cols = h0_t0_1_beta:h4_Amp_2_cov,
               names_to = c("time", "group", "rep", ".value"),
               names_pattern = "h(.)_(.*)_(.)_(.*)") %>%
  drop_na()
```

```{r differences_by_feature}
cohen_annotated_long$feature_type <- as.factor(cohen_annotated_long$feature_type)
levels(cohen_annotated_long$feature_type) <- list('Promoters' = 'Promoters',
                                                        '-10 Box' = 'BOX_10',
                                                        '-35 Box' = 'BOX_35',
                                                        'Sigma 24' = 'Sigma24',
                                                        'Sigma 28' = 'Sigma28',
                                                        'Sigma 32' = 'Sigma32',
                                                        'Sigma 38' = 'Sigma38',
                                                        'Sigma 70' = 'Sigma70',
                                                        'DNA Binding Sites' = 
                                                          'DNA-Binding-Sites',
                                                        'Transcription Units' = 
                                                          'Transcription-Units',
                                                        'Genes' = 'Genes',
                                                        'Rho-Dependent Terminators' = 
                                                          'Rho-Dependent-Terminators',
                                                        'Rho-Independent Terminators' = 
                                                          'Rho-Independent-Terminators',
                                                        'mRNA Binding Sites' = 
                                                          'mRNA-Binding-Sites',
                                                        'Origin of Replication' = 
                                                          'Origin-of-Replication',          
                                                        'Cryptic Prophages' = 
                                                          'Cryptic-Prophages',
                                                        'IS Elements' = 'IS-Elements',
                                                        'REP Elements' = 'REP-Elements',
                                                        'No Feature' = 'No_Feature'
                                                        )

# Select time and group to generate figures
# Time: 0, 1, 2, 3, or 4
# Group: t0, LB, or AMP
timepoint <- 4
thisgroup <- 'LB'
select_group <- function(df) {
  df |> 
    group_by(Site, time, group) |> 
    dplyr::filter(time == timepoint &
                    group == thisgroup)
}

genome_median <- cohen_annotated_long |> 
  select_group() |> 
  summarise(beta = mean(beta),
            cov = mean(cov)) |> 
  pull(beta) |> 
  median()

notch_bool <- FALSE

sigma_avg_methylation_plot <- cohen_annotated_long |> 
  select_group() |> 
  mutate(beta = mean(beta),
         cov = mean(cov)) |> 
  unique() |> 
  dplyr::filter(grepl('Sigma', feature_type)) |> 
  ggplot(aes(x = feature_type,
             y = beta*100)) +
  geom_boxplot(notch = notch_bool,
               fill = 'gray85') +
    theme_classic() +
  labs(x = 'Sigma factor binding at -35 element',
       y = "Percent methylated reads") +
  geom_hline(yintercept = genome_median*100,
             linetype = "dashed")

# Genic vs intergenic sites
genic_df <- cohen_annotated %>% 
  filter(!is.na(Genes)) %>% 
  dplyr::select(Site, h4_avg)
intergenic_df <- cohen_annotated %>% 
  filter(is.na(Genes)) %>% 
  dplyr::select(Site, h4_avg)
genic_df$gi <- "genic"
intergenic_df$gi <- "intergenic"
genic_intergenic_df <- bind_rows(genic_df, intergenic_df)
genic_plot <- ggplot(genic_intergenic_df,
                     aes(x = gi,
                         y = beta)) +
  geom_boxplot(notch = T, fill = 'gray85') +
  theme_classic() +
  labs(x = 'Genic/Intergenic',
       y = 'Percent methylated reads')

genic_combined_plot <- ggplot(genic_intergenic_df,
                     aes(x = gi,
                         y = h4_avg*100)) +
  geom_boxplot(notch = notch_bool,
               fill = '#FBB4AE') +
  theme_classic() +
  labs(x = 'Genic/Intergenic',
       y = "Percent methylated reads") +
  scale_y_continuous(breaks = seq(0, 100, 20),
                     limits = c(0,100)) +
  geom_hline(yintercept = genome_median,
             linetype = 'dashed') +
  theme(plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
DBS_combined_plot <- cohen_annotated_long |> 
  select_group() |> 
  mutate(beta = mean(beta),
         cov = mean(cov)) |> 
  unique() |> 
  filter(feature_type == 'DNA Binding Sites') |> 
  separate(feature_name, sep = ' ', c('feature_name', NA)) |>  
  filter(feature_name == 'CRP-cAMP' |
           feature_name == 'Fnr' |
           feature_name == 'Nac' |
           feature_name == 'Fis' |
           feature_name == 'Cra' |
           feature_name == 'IHF' |
           feature_name == 'Lrp') |> 
  dplyr::mutate(feature_name = forcats::fct_recode(feature_name, 
                                                   'CRP' = 'CRP-cAMP')) |> 
  ggplot(aes(x = feature_name, y = beta*100)) +
  geom_boxplot(notch = notch_bool,
               fill = '#B3CDE3') +
  theme_classic() +
  labs(x = 'DNA Binding Factors') +
  scale_y_continuous(limits = c(0,100)) +
  theme(axis.line.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        axis.title.y = element_blank(),
        plot.margin = unit(c(0.1, 0, 0.1, 0), "cm")) +
  geom_hline(yintercept = genome_median*100,
             linetype = 'dashed')
prophage_combined_plot <- cohen_annotated_long |> 
  select_group() |> 
  mutate(beta = mean(beta),
         cov = mean(cov)) |> 
  unique() |> 
  filter(feature_name == 'DLP12' |
           feature_name == 'Rac' |
           feature_name == 'Qin' |
           feature_name == 'e14' |
           feature_name == 'CPZ-55') |> 
  ggplot(aes(x = feature_name, y = beta*100)) +
  geom_boxplot(notch = notch_bool,
               fill = '#CCEBC5') +
  theme_classic() +
  labs(x = 'Cryptic Prophages') +
  scale_y_continuous(limits = c(0,100)) +
  theme(axis.line.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        axis.title.y = element_blank(),
        plot.margin = unit(c(0.1, 0, 0.1, 0), "cm")) +
  geom_hline(yintercept = genome_median*100,
             linetype = 'dashed')
IS_combined_plot <- cohen_annotated_long |> 
  select_group() |> 
  mutate(beta = mean(beta),
         cov = mean(cov)) |> 
  unique() |> 
  filter(feature_name == 'IS2A' |
           feature_name == 'IS2D' |
           feature_name == 'IS5A' |
           feature_name == 'IS5B' |
           feature_name == 'IS150' |
           feature_name == 'IS186A' |
           feature_name == 'IS186B') |> 
  ggplot(aes(x = feature_name, y = beta*100)) +
  geom_boxplot(notch = notch_bool,
               fill = '#DECBE4') +
  theme_classic() +
  labs(x = 'IS Elements') +
  scale_y_continuous(limits = c(0,100)) +
  theme(axis.line.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        axis.title.y = element_blank(),
        plot.margin = unit(c(0.1, 0, 0.1, 0), "cm")) +
  geom_hline(yintercept = genome_median*100,
             linetype = 'dashed')

# Put it together
combined_plot <- plot_grid(genic_combined_plot, DBS_combined_plot, prophage_combined_plot,
                           IS_combined_plot,
                           nrow = 1,
                           rel_widths = c(5/9, 1, 5/7, 1),
                           labels = c("C", NULL, NULL, NULL, NULL))

bottom_plot <- plot_grid(NULL, combined_plot,
                         nrow = 2,
                         rel_heights = c(0.05, 1))
```

```{r}
CRP_data <- cohen_annotated_long |> 
  filter(feature_type == 'DNA Binding Sites') |> 
  separate(feature_name, sep = ' ', c('feature_name', NA)) |> 
  filter(feature_name == 'CRP-cAMP') |> 
  dplyr::mutate(feature_name = forcats::fct_recode(feature_name, 'CRP' = 'CRP-cAMP')) |> 
  pivot_longer(cols = starts_with('h'),
               names_to = 'Time',
               values_to = 'beta',
               names_pattern = "h(.)_avg")
CRP_data$Time <- as.numeric(CRP_data$Time)

CRP_time_plot <- CRP_data |> 
  ggplot(aes(x = Time,
             y = beta,
             group = Time)) +
  geom_boxplot() +
  theme_classic()
```


```{r annotate_TSS}
cohen_df_tss <- annotateTSS(cohen_df,
                            genome_sites,
                            location = "Site",
                            size = 500)
```


```{r}
library(quantreg)
cohen_df_tss |> 
  ggplot(aes(x = RelPos,
             y = LB_avg)) +
  stat_summary(fun = median,
               geom = "point") +
  theme_classic()

```

```{r plot_coverage_position}
cohen_cov |> 
  pivot_longer(cols = h0_1:h4_Amp_2,
               names_to = "sample",
               values_to = "cov") |> 
  ggplot(aes(x = Site,
             y = cov)) +
  geom_point() +
  facet_wrap(~sample)
```

```{r plot_cov_methyl_trend}
combined_long |> 
  group_by(Site, time, group) |> 
  summarise(m_beta = mean(beta, na.rm = TRUE),
            m_cov = mean(cov)) |> 
  ggplot(aes(x = m_cov,
             y = methylBtoM(m_beta))) +
  facet_wrap(time ~ group) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_classic()
```

```{r cov_beta_mydata}
all_samples_long |> 
  ggplot(aes(x = cov,
             y = beta)) +
  facet_wrap('sample') +
  geom_point() +
  geom_smooth(method = "rlm") +
  theme_classic()

WT_average |> 
  ggplot(aes(x = cov,
             y = methylBtoM(beta))) +
  geom_point() +
  geom_smooth(method = "rlm") +
  theme_classic()
```

```{r is_this_a_caller_problem}
all_callers_wt |> 
  dplyr::select(DS_Position,
                contains("Methyl_Percent"),
                contains("Coverage")) |> 
  dplyr::select(!contains("Var")) |> 
  pivot_longer(cols = !DS_Position,
               names_pattern = "(..)_(.*)_(.*)",
               names_to = c("caller", ".value", "sample")) |> 
  filter(Methyl_Percent <= 1.0 & Methyl_Percent >= 0.0) |> 
#  group_by(caller, DS_Position) |> 
#  summarise(methyl = mean(Methyl_Percent),
#            cov = mean(Coverage)) |> 
  ggplot(aes(x = Coverage,
             y = methylBtoM(Methyl_Percent))) +
  facet_wrap(~caller) +
  geom_point(size = 0.5) +
  geom_smooth(method = "lm") +
  theme_classic()

ggsave(filename = "/Users/carlstone/Library/CloudStorage/Box-Box/Behringer_Lab_Box_Drive/Projects/LongTermExpEvo/MethylationProject/Manuscript/Figures/old_figures/cov_methyl_trend_bycaller_averaged.png",
       width = 10)
```

```{r remove_linear_trends}
all_callers_tidy <- all_callers_wt |> 
  dplyr::select(DS_Position,
                contains("Methyl_Percent"),
                contains("Coverage")) |> 
  dplyr::select(!contains("Var")) |> 
  pivot_longer(cols = !DS_Position,
               names_pattern = "(..)_(.*)_(.*)",
               names_to = c("caller", ".value", "sample")) |> 
  filter(Methyl_Percent <= 1.0 & Methyl_Percent >= 0.0) |> 
  group_by(caller, DS_Position) |> 
  summarise(methyl = methylBtoM(mean(Methyl_Percent)),
            cov = mean(Coverage))

fit <- lm(methyl ~ cov, data = all_callers_tidy |> filter(caller == 'Mg'))
```

```{r what_if_i_averaged_Mg_and_DS}
all_callers_wt |> 
  dplyr::select(DS_Position,
                contains("Methyl_Percent"),
                contains("Coverage")) |> 
  dplyr::select(!contains("Var")) |> 
  pivot_longer(cols = !DS_Position,
               names_pattern = "(..)_(.*)_(.*)",
               names_to = c("caller", ".value", "sample")) |> 
  filter(Methyl_Percent <= 1.0 & Methyl_Percent >= 0.0) |> 
  filter(caller == "Mg" | caller == "DS") |> 
  group_by(DS_Position, sample) |> 
  summarise(beta = mean(Methyl_Percent),
            cov = mean(Coverage)) |> 
  ggplot(aes(x = cov,
             y = beta)) +
  facet_wrap(~sample) +
  geom_point(size = 0.5) +
  geom_smooth(method = "rlm") +
  theme_classic()
```

```{r dm_cohen_data}
df <- cohen_combined_long |>
  dplyr::rename(Position = Site,
                methyl = beta) |> 
  pivot_wider(names_from = c(time, group, rep), 
              values_from = c(methyl, cov), 
              names_glue = "{.value}_h{time}.{group}.rep{rep}") |> 
  as.data.frame()

assembly <- "NC_000913.3"
context <- "GATC"
resolution <- "base"
coverage_df <- df %>%
  dplyr::select(starts_with("cov"))
methyl_df <- df %>%
  dplyr::select(starts_with("methyl"))
n_samples <- ncol(coverage_df)
sample_ids <- strsplit(colnames(coverage_df), split = "_")
sample_ids <- matrix(unlist(sample_ids), ncol = n_samples)[2,]
methylRawList_obj <- new("methylRawList")

for (i in 1:n_samples) {
  methylRaw_obj <- new("methylRaw")
  methylRaw_obj@sample.id = sample_ids[i]
  methylRaw_obj@assembly = assembly
  methylRaw_obj@context = context
  methylRaw_obj@resolution = resolution
  methylRaw_obj@.Data = list(rep(assembly, nrow(df)),
                             df$Position,
                             df$Position,
                             rep(c("+", "-")),
                             coverage_df[,i],
                             methyl_df[,i] * coverage_df[,i],
                             (1 - methyl_df[,i]) * coverage_df[,i])
  methylRaw_obj@names = c("chr", "start", "end", "strand", "coverage", "numCs", "numTs")
  methylRaw_obj@row.names = rownames(df)
  methylRawList_obj[[i]] <- methylRaw_obj
}

dm <- methylRawList_obj
dm@treatment <- c(0, 0, 0,
                  1, 1, 1,
                  2, 2,
                  3, 3, 3,
                  4, 4, 4,
                  5, 5, 5,
                  6, 6, 6,
                  7, 7, 
                  8, 8)

dm_unite <- methylKit::unite(dm)
#suppressWarnings(
#  dm_calc <- calculateDiffMeth(pool(dm_unite,
#                                    sample.ids = c("t0", "LB1", "LB2", "LB3", "LB4",
#                                                   "Amp1", "Amp2", "Amp3", "Amp4")), 
#                               overdispersion = "none", 
#                               effect = "wmean")
#)
#
#dm_tibble <- as_tibble(dm_calc)
#dm_signif <- dm_tibble |> 
#  filter(meth.diff >= 10 & qvalue < 0.05)
```

```{r dm_every_timepoint}
dm_h1 <- reorganize(dm_unite,
                    sample.ids = c("h1.LB.rep1", "h1.LB.rep2", "h1.LB.rep3",
                                   "h1.Amp.rep1", "h1.Amp.rep2", "h1.Amp.rep3"),
                    treatment = c(0, 0, 0, 1, 1, 1))
dm_h2 <- reorganize(dm_unite,
                    sample.ids = c("h2.LB.rep1", "h2.LB.rep2",
                                   "h2.Amp.rep1", "h2.Amp.rep2", "h2.Amp.rep3"),
                    treatment = c(0, 0, 1, 1, 1))
dm_h3 <- reorganize(dm_unite,
                    sample.ids = c("h3.LB.rep1", "h3.LB.rep2", "h3.LB.rep3",
                                   "h3.Amp.rep1","h3.Amp.rep2"),
                    treatment = c(0, 0, 0, 1, 1))
dm_h4 <- reorganize(dm_unite,
                    sample.ids = c("h4.LB.rep1", "h4.LB.rep2", "h4.LB.rep3",
                                   "h4.Amp.rep1","h4.Amp.rep2"),
                    treatment = c(0, 0, 0, 1, 1))

suppressWarnings(
  dm_h1_calc <- calculateDiffMeth(dm_h1,
                                  overdispersion = "none",
                                  effect = "wmean")
)
suppressWarnings(
  dm_h2_calc <- calculateDiffMeth(dm_h2,
                                  overdispersion = "none",
                                  effect = "wmean")
)
suppressWarnings(
  dm_h3_calc <- calculateDiffMeth(dm_h3,
                                  overdispersion = "none",
                                  effect = "wmean")
)
suppressWarnings(
  dm_h4_calc <- calculateDiffMeth(dm_h4,
                                  overdispersion = "none",
                                  effect = "wmean")
)

h1_signif <- as_tibble(dm_h1_calc) |> 
  filter((meth.diff >= 10 | meth.diff <= -10) & qvalue < 0.05)
h2_signif <- as_tibble(dm_h2_calc) |> 
  filter((meth.diff >= 10 | meth.diff <= -10) & qvalue < 0.05)
h3_signif <- as_tibble(dm_h3_calc) |> 
  filter((meth.diff >= 10 | meth.diff <= -10) & qvalue < 0.05)
h4_signif <- as_tibble(dm_h4_calc) |> 
  filter((meth.diff >= 10 | meth.diff <= -10) & qvalue < 0.05)
```

```{r plot_a_few_sites}
cohen_combined_long |> 
  filter(Site == 1010784) |> 
  ggplot(aes(x = time,
             y = beta,
             color = group)) +
  geom_boxplot()

fit <- cohen_combined_long |> 
  group_by(Site, time, group) |> 
  summarise(m = mean(methylBtoM(beta)), .groups = "drop") |> 
  ungroup() |> 
  filter(group != 't0') |> 
  anova_test(m ~ group*time) |> 
  get_anova_table() |> 
  adjust_pvalue(method = "BH")

one.way <- cohen_combined_long |> 
  group_by(Site, time, group) |> 
  summarise(m = mean(methylBtoM(beta))) |> 
  ungroup() |> 
  filter(group != 't0') |> 
  group_by(time) |> 
  anova_test(m ~ group) |> 
  get_anova_table() |> 
  adjust_pvalue(method = "BH")

one.way

pwc <- cohen_combined_long |> 
  group_by(Site, time, group) |> 
  summarise(m = mean(methylBtoM(beta))) |> 
  ungroup() |> 
  filter(group != 't0') |> 
  group_by(time) |> 
  pairwise_wilcox_test(
    m ~ group, paired = TRUE,
    p.adjust.method = "BH"
  )

pwc

cohen_combined_long |> 
  group_by(Site, time, group) |> 
  summarise(beta = mean(beta),
            m = mean(methylBtoM(beta))) |> 
  ggplot(aes(x = time, y = m, color = group)) +
  geom_boxplot() +
  theme_classic()
```

```{r plot_dm}
as_tibble(dm_h4_calc) |> 
  ggplot(aes(x = meth.diff,
             y = -log(qvalue))) +
  geom_point(aes(color = cut(meth.diff, c(-Inf, -10, 10, Inf)))) +
  # The third interval below must be "(10, Inf]" with a SPACE
  scale_color_manual(name = "Differentially Methylated",
                     values = c("(-Inf,-10]" = "blue",
                                "(-10,10]" = "gray",
                                "(10, Inf]" = "red"),
                     breaks = c("(-Inf,-10]", "(10, Inf]"),
                     labels = c("Down", "Up")) +
  geom_hline(yintercept = -log10(0.05),
             col = "black",
             linetype = "dashed") +
  geom_vline(xintercept = c(-10, 10),
             col = "black",
             linetype = "dashed") +
  labs(x = "Percent methylation difference") +
  theme_classic()
```

```{r are_variable_sites_undermethylated_in_WT}
variable_sites <- h1_signif |> 
  bind_rows(h2_signif) |> 
  bind_rows(h3_signif) |> 
  bind_rows(h4_signif) |> 
  pull(start) |> 
  unique()

variable_sites <- h4_signif |> 
  pull(start)

WT_average |> 
  mutate(variable = case_when(
    Position %in% variable_sites ~ "varies",
    !(Position %in% variable_sites) ~ "not_varies")) |> 
  ggplot(aes(y = m,
             color = variable)) +
  geom_boxplot()

variable_cohen <- cohen_combined_long |> 
  mutate(variable = case_when(
    Site %in% variable_sites ~ "varies",
    !(Site %in% variable_sites) ~ "not_varies")) |> 
  ggplot(aes(variable, beta))+
  geom_boxplot() +
  geom_hline(yintercept = median(cohen_combined_long$beta))

variable_cohen <- cohen_combined |> 
  filter(Site %in% variable_sites)

write_tsv(variable_cohen,
          file = "/Users/carlstone/Library/CloudStorage/Box-Box/Behringer_Lab_Box_Drive/Projects/LongTermExpEvo/MethylationProject/Cohen2016/variable_sites.txt")
```

```{r pull_out_variable_sites}

```

```{r are_variable_sites_in_certain_features}
cohen_variable <- cohen_combined_long |> 
  group_by(Site, time, group) |> 
  summarise(beta = mean(beta),
            cov = mean(cov),
            m = methylBtoM(mean(beta))) |> 
  mutate(variable = case_when(Site %in% variable_sites ~ "y",
                              !(Site %in% variable_sites) ~ "n")) |> 
  annotateMethylSites(meta_df = genome_sites,
                      location = "Site")
```

